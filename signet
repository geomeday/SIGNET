#!/bin/bash

operate=${1}

options=""
for((i=2;i<=$#;i++)); do 
    j=${!i}
    options="${options} $j "
done

#Set directories
cd $(dirname $0)

mkdir -p data
mkdir -p tmp
mkdir -p res

SIGNET_ROOT=$(/bin/pwd)
SIGNET_DATA_ROOT="$SIGNET_ROOT/data"
SIGNET_TMP_ROOT="$SIGNET_ROOT/tmp"
SIGNET_RESULT_ROOT="$SIGNET_ROOT/res"
SIGNET_SCRIPT_ROOT="$SIGNET_ROOT/script"
#echo -n The directory that stores data is:
#echo $SIGNET_DATA_ROOT
#echo -n The directory that stores the temporary files is:
#echo $SIGNET_TMP_ROOT
#echo -n The directory that stores the results is:
#echo $SIGNET_RESULT_ROOT
#echo -n The directory that stores the scripts is:
#echo $SIGNET_SCRIPT_ROOT
export SIGNET_ROOT=$SIGNET_ROOT
export SIGNET_DATA_ROOT=$SIGNET_DATA_ROOT
export SIGNET_TMP_ROOT=$SIGNET_TMP_ROOT
export SIGNET_RESULT_ROOT=$SIGNET_RESULT_ROOT
export SIGNET_SCRIPT_ROOT=$SIGNET_SCRIPT_ROOT

file_prefix(){
for f in * ;do mv -- "$f" "$1_$f"; done
}

file_check(){
outfile=$(readlink -f $1)

if [[ -z $outfile ]]; then
echo "The prefix can't be blank"
exit -1
fi

qyn=0 

while [[ qyn -eq 0 ]]; do

qyn=1

if compgen -G "$outfile"_"*" >> /dev/null; then
read -p "There exists files with prefix "$1" already, overwriting them? Enter Y to continue, N to exit. [Y/N]: "  yn

case $yn in
Y|Yes|y|yes ) rm "$outfile"_*;;
N|No|n|no ) exit -1;;
* ) qyn=0
    echo -n "Please choose between Y or N: "
    read yn;;
esac
fi

done
}

file_trans(){

default_file=$1
out_file=$2

for f in $1_*; do mv "$f" "$2_${f#$1_}"; done

}

geno_prep(){
	$SIGNET_SCRIPT_ROOT/geno_prep_portal.sh ${options};
}

gexp_prep(){
	$SIGNET_SCRIPT_ROOT/gexp_prep_portal.sh ${options};
}


config(){
    $SIGNET_SCRIPT_ROOT/config_controller.sh ${options};
}

network(){
	$SIGNET_SCRIPT_ROOT/network_portal.sh ${options};
}

cis_eqtl(){
	$SIGNET_SCRIPT_ROOT/cis_portal.sh ${options};
}
netvis(){
	$SIGNET_SCRIPT_ROOT/netvis_portal.sh ${options};
}
match(){
	$SIGNET_SCRIPT_ROOT/match_portal.sh ${options};
}
echo -e ""


case "$operate" in
    -g|-geno)
        geno_prep;;
    -t|-transcript)
        gexp_prep;;
    -n|-network)
        network;;
    -c|-cis_eqtl)
        cis_eqtl;;
    -s|-settings)
	config;;
    -v|-vis)
	netvis;;
    -m|-match)
	match;;
    *)
        echo -e "Usage params: -g|-t|-n|-c|-s|-v|-m"
        ;;
esac        

echo -e ""

exit 0
